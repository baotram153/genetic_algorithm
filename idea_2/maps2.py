# map setup

def select_map(map_num):
    match map_num:
        case 8:
            map = [0,0,0,0,0,0,0,0,    #level 8 | ok ~ 50
            0,1,1,1,1,1,0,0,        #flag = 13
            0,1,1,1,1,2,1,0,
            0,1,1,1,1,1,1,0,
            0,1,1,0,1,1,1,0,
            0,1,2,1,1,1,1,0,
            0,0,1,1,0,0,0,0,
            0,0,0,0,0,0,0,0]

        case 5:
            map = [0,0,0,0,0,0,0,0,    #level 5 | ok ~ 25
            0,0,0,0,0,0,0,0,        #start = 13
            0,0,0,0,0,1,0,0,
            0,0,0,0,0,1,0,0,
            0,1,3,1,1,3,1,0,        #flag = 34
            0,0,1,0,0,1,0,0,
            0,0,0,0,0,0,0,0,]

        case 4:
            map = [0,0,0,0,       #level 4 | ok ~ 1
            0,0,0,0,        #start = 5
            0,1,0,0,
            0,1,0,0,
            0,2,1,0,
            0,1,0,0,        #flag = 21
            0,0,0,0]
        
        case 6:
            map = [0,0,0,0,0,0,0,      #level 6 | ok ~ 40
            0,1,1,0,0,0,0,      #start = 10
            0,1,1,1,1,0,0,      #flag = 18
            0,1,1,1,1,1,0,
            0,1,1,1,1,1,0,
            0,0,0,0,0,0,0]

        case 7:
            map = [0,0,0,0,0,0,0,0,        #level 7 ~ 9000
            0,0,0,1,1,0,0,0,
            0,0,0,1,1,0,0,0,
            0,1,1,1,1,1,1,0,        #flag = start = 30
            0,1,1,1,1,1,1,0,        
            0,0,0,1,1,1,0,0,
            0,0,0,1,1,1,0,0,
            0,0,0,0,0,0,0,0]

        case 10:
            map = [0,0,0,0,0,0,0,0,        #level 10 | ok ~ 200
            0,0,0,0,1,1,0,0,        
            0,0,1,1,2,2,1,0,        #start = 17
            0,0,0,0,1,2,1,0,
            0,0,0,0,0,1,0,0,
            0,0,0,0,0,1,0,0,
            0,0,0,0,0,1,0,0,        #flag = 53
            0,0,0,0,0,0,0,0]

        case 11:
            map = [0,0,0,0,0,0,0,0,0,      #level 11 | ok ~ 8000
            0,0,0,1,1,1,1,0,0,      
            0,0,0,1,2,2,2,0,0,      #start = 25
            0,1,1,1,1,2,1,0,0,      #flag = 28
            0,0,0,1,1,1,0,0,0,
            0,0,0,0,0,0,0,0,0]

        case 12:
            map = [0,0,0,0,0,0,0,0,0,0,    #level 12 | ok ~ 40000
            0,0,0,0,0,1,1,0,0,0,    #start = 14
            0,0,0,1,2,2,1,0,0,0,
            0,0,1,2,2,1,1,1,0,0,
            0,1,1,1,1,0,1,2,1,0,    #flag = 41
            0,0,0,1,1,1,1,2,1,0,
            0,0,0,0,0,1,1,1,0,0,
            0,0,0,0,0,0,0,0,0,0]

        case 9:
            map = [0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,    #start = 11
            0,0,1,2,1,0,0,0,
            0,1,2,1,1,0,0,0,
            0,1,1,1,1,0,0,0,
            0,0,1,2,1,1,0,0,
            0,1,2,1,1,1,0,0,
            0,1,1,0,1,1,1,0,    #flag = 62
            0,0,0,1,2,1,0,0,
            0,0,0,1,1,0,0,0,
            0,0,0,0,0,0,0,0]

        case 13:
            map = [0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,      #start = 16
            0,0,0,0,1,2,1,0,0,0,0,
            0,0,0,0,1,2,2,1,0,0,0,
            0,0,0,0,0,1,1,2,1,0,0,
            0,1,1,1,1,1,1,1,1,1,0,      #flag = 56
            0,0,1,2,2,0,0,0,1,1,0,
            0,0,0,1,2,1,2,2,1,0,0,
            0,0,0,0,0,0,1,1,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0]     

        case 20:
            map = [0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,        #start = 18
            0,0,0,0,0,1,1,1,0,0,0,0,
            0,0,0,0,0,2,1,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,1,0,0,
            0,0,1,1,2,1,1,1,1,2,2,0,        #flag = 70
            0,0,1,2,3,1,3,1,1,1,1,0,
            0,1,1,1,1,3,1,2,0,0,0,0,
            0,1,1,2,2,1,1,2,1,0,0,0,
            0,0,0,0,0,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0]

        case 24:    # map 11x11
            map = [0,0,0,0,0,0,0,0,0,0,0,0,0,   
            0,0,0,0,0,0,0,0,0,0,0,0,0,      # start = 20
            0,0,0,0,0,0,0,2,1,0,0,0,0,
            0,0,0,0,0,0,1,1,0,0,0,0,0,
            0,0,0,0,1,1,1,2,1,0,0,0,0,
            0,0,0,0,1,2,2,2,2,2,2,2,0,      # flag = 76
            0,0,1,1,0,1,1,1,1,0,3,1,0,
            0,1,1,1,2,1,1,0,0,1,1,0,0,
            0,2,1,0,2,1,2,1,1,1,0,0,0,
            0,2,2,0,2,2,2,1,0,0,0,0,0,
            0,0,1,1,4,1,1,1,0,0,0,0,0,
            0,0,0,1,1,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0]
    return map

def columns(num):
    match num:
        case 8:
            n_column = 8
        case 5:
            n_column = 8
        case 4:
            n_column = 4
        case 6:
            n_column = 7
        case 7:
            n_column = 8
        case 10:
            n_column = 8
        case 11:
            n_column = 9
        case 12:
            n_column = 10
        case 9:
            n_column = 8
        case 13: 
            n_column = 11
        case 20:
            n_column = 12
        case 24:
            n_column = 13
    return n_column

def start(num):
    match num:
        case 8:
            start = 52
        case 5:
            start = 13
        case 4:
            start = 5
        case 6:
            start = 10
        case 7:
            start = 30
        case 10:
            start = 17
        case 11:
            start = 25
        case 12:
            start = 14
        case 9:
            start = 11
        case 13:
            start = 16
        case 20:
            start = 18
        case 24:
            start = 20
    return start

def flag(num):
    match num:
        case 8:
            flag = 13
        case 5:
            flag = 34
        case 4:
            flag = 21
        case 6:
            flag = 18
        case 7:
            flag = 30
        case 10:
            flag = 53
        case 11:
            flag = 28
        case 12:
            flag = 41
        case 9:
            flag = 62
        case 13: 
            flag = 56
        case 20:
            flag = 70
        case 24:
            flag = 76
    return flag

def best(num):
    match num:
        case 8:
            best = 48
        case 5:
            best = 20
        case 4:
            best = 8
        case 6:
            best = 24
        case 7:
            best = 32
        case 10:
            best = 24
        case 11:
            best = 31
        case 12:
            best = 50
        case 9:
            best = 52
        case 13:
            best = 62
        case 20:
            best = 90
        case 24:
            best = 103
    return best     # objective function: n_steps + flag_pt - block_distance

#steps calculation
    #steps = number of bit in a string
def steps_calc(map):
    steps = 0
    for i in range(len(map)):
        if map[i]>0:
            steps = steps + map[i]
    steps = steps + 1
    return steps    #int